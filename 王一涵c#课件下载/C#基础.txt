1.存储同一类型的  一组数据
  数据类型[] 数组名字 = new 数据类型[数组长度]；
  当你执行这句话的时候，就在内存里面开辟了10个空间，每一个空间我们称之为元素
  我们可以通过下标（索引）存取数据
  从0开始
  数组长度 一旦确定 就不能改变了
2.	int[] nums1 = new int[10];   //声明的时候，我们就确定了数组的类型和长度
        int[] nums2 = { 1, 2, 3, 4, 5 };//声明的时候，直接初始化了，知道类型，长度和值


            int[] nums3 = new int[4] { 1, 2, 3, 4};  //知道长度  类型，和值 
            int[] nums4 = new int[] { 1, 2, 3, 4 };  //知道长度  类型，和值 

            //声明一个string类型的数组，长度是3，值是"hello", "world", "nihao"
            //声明的时候初始化 用{}，里面的元素 用逗号隔开
            //通过下表访问数据  数组名[下标]
            string[] strArr = { "hello", "world", "nihao" };
            Console.WriteLine(strArr[1]);
            //Console.WriteLine(strArr[3]);   //如果下表不存在，会有下表越界的异常
3.  
	//语法，从数据集合里面取第一个元素赋值给  变量名  ，然后去执行循环体
	//执行完循环体以后，再取第二个   并且赋值给变量名  ，再去执行循环体
	直到取出最后一个  ，执行循环体
	foreach(var 变量名 in 数据集合名){
		//循环体
	}

	var 推断类型  
	int item   
	var a;
	var声明变量的时候 必须赋值  
4.练习题
	练习1：从一个整数数组中取出最大的整数,最小整数,总和,平均值
	练习2:数组里面都是人的名字,分割成:例如:老杨|老苏|老邹…”
	(老杨,老苏,老邹,老虎,老牛,老蒋,老王,老马)
	练习3：将一个整数数组的每一个元素进行如下的处理：如果元素是正数则将这个位置的元素的值加1，如果元素是负数则将这个位置的元素的值减1,如果元素是0,则不变。
	练习4：将一个字符串数组的元素的顺序进行反转。{“我”,“是”,”好人”} {“好人”,”是”,”我”}。

	a b c d e f
        0 1 2 3 4 5
	交换 依次是   
	af  0   5  arr.Length-1-0
	be  1   4  arr.Length-1-1
	cd  2   3  arr.Length-1-2


	f e d c b a

	


int.MinValue  表示int类型中的最小值
int.MaxValue	表示int类型中的最大值


5. 冒泡排序   
	10,8,3,15,26,11,30   排序后   3，8,10,15,1,26 30   
	
	int[] nums = {9, 8, 7, 6, 5, 4 ,3 ,2 ,1};  

	第一趟  8 7 6 5 4 3 2 1 9 交换了 8次   i = 0   j = 8;   nums.Length-1 -0
	第二趟  7 6 5 4 3 2 1 8 9 交换了 7次   i = 1   j = 7;   nums.Length-1 -1
	第三趟  6 5 4 3 2 1 7 8 9 交换了 6次   i = 2   j = 6;   nums.Length-1 -2
	第四趟  5 4 3 2 1 6 7 8 9 交换了 5次     nums.Length-1 -i
	第五趟  4 3 2 1 5 6 7 8 9 交换了 4次
	第六趟  3 2 1 4 5 6 7 8 9 交换了 3次
	第七趟  2 1 3 4 5 6 7 8 9 交换了 2次
	第八趟  1 2 3 4 5 6 7 8 9 交换了 1次
	
	for(int i = 0;i<nums.Length-1;i++){
		for(int j=0;j<nums.Length-1 -i;j++){
			//交换
		}
	}
	
7.方法（函数）	
	函数就是将一堆代码进行重用的一种机制。函数就是一段代码，这段代码可能有输入的值（参数），可能会返回值。一个函数就像一个专门做这件事的人，我们调用它来做一些事情，它可能需要我们提供一些数据给它，它执行完成后可能会有一些执行结果给我们。要求的数据就叫参数，返回的执行结果就是返回值。


	有了函数写代码就像拼积木，C#中的各种各样的技术其实就是通过for、if等这些基础的语法将不同的函数按照一定的逻辑组织起来。


语法
	[public] static 返回值类型 方法名字（[参数列表]）{
		方法体
	}
	public  :访问修饰符  可以省略  这个方法 是公有  
	static  ：表示静态的 
	返回值类型： int  string char   没有返回值  void
	方法的名字：Pascal规则
	参数列表：可以没有参数，但是小括号是必须要有的


	调用方法：
		类名.方法名（参数）;

		如果调用同一个类 里面的方法 ，类名可以省略

参数：
	//在方法声明的地方  参数列表  跟声明变量一样 ,多个参数用逗号隔开
	public static void Log(string str) {
            Console.WriteLine(str);
        }

return的作用
	1.返回方法的结果
	2.在没有返回值的方法里面，终止当前方法

params
	不定参数个数关键字，如果参数列表还有其他参数，params 修饰的参数要放在最后一个
调用者和被调用者
	调用者传递数据 给被调用者
		参数
		全局变量
	被调用者传递数据
		返回值
out参数
可以帮助我们在一个方法中返回多个值，不限类型。
使用out参数的时候要求，out参数必须在方法内为其赋值。

ref参数
ref参数侧重于将一个变量以参数的形式带到一个方法中进行改变，
改变完成后，再讲改变后的值带出来。
在使用ref参数的时候需要注意：ref参数在方法外必须为其赋值。

方法的重载：
	方法名相同，但是参数不同的方法
	参数不同：
		参数个数不同
		参数顺序不同
		参数类型不同
	跟返回值没有关系
递归：
	在方法内调用自己
		方法体一定要有一个跳出的条件，要不就死循环
递归练习题
	求n的阶乘  n!   5！ = 5*4*3*2*1
	2 3 5 8 13 21  斐波那契数列  求第n个数


结构体中的函数
	结构体力也可以有函数
	函数可以是静态的  也可以是非静态
	静态： static 修饰方法  结构体名.方法名();
	非静态的：变量名.方法名();

方法总结
	方法：解决代码冗余的问题，让代码重复使用,功能单一
	参数：执行这个功能必须的条件
	返回值:执行后的结果
	out参数：可以实现多返回值，必须在方法里面赋值
	ref参数：讲变量带入方法改变，将改变后的值带出去，在方法外赋值
	params:可变参数，将同一类型的实际参数 封装成了数组 到形式参数,params修饰的参数必须在参数列表的最后一个
	重载：方法名一样，参数不同，返回值没有关系
		参数个数不同
		参数类型不同
		参数顺序不同
	递归：自己调用自己，有一个条件可以跳出方法
方法练习题
	1.用方法来实现：有一个字符串数组：{ "马龙", "迈克尔乔丹", "雷吉米勒", "蒂姆邓肯", "科比布莱恩特" },请输出最长的字符串。
	2.写一个方法，用来判断数字是不是质数 
	3.接受输入后判断其等级并显示出来。判断依据如下：等级={优 （90~100分）；良 （80~89分）中 （60~69分）；差 （0~59分）；}
	4.请将字符串数组{ "中国", "美国", "巴西", "澳大利亚", "加拿大" }中的内容反转
	5.写一个方法 计算圆的面积和周长  面积是 pI*R*R  周长是 2*Pi*r
	6.计算任意多个数间的最大值（提示：params）。
	7.请通过冒泡排序法对整数数组{ 1, 3, 5, 7, 90, 2, 4, 6, 8, 10 }实现升序排序。
	

字符串练习题
	1.判断一个字符串是否是回文，例如  abcba 
	2.判断字符串是否包含回文（至少三个字符，才有资格判断是否是回文）
	3.求一个字符串里面的最长回文
	4.判断字符串里面某个字符串出现的次数  



1.C#急速入门

2.C#之面向对象

3.C#高级进阶
	
4.程序员内功修炼 - 数据结构(C#)
	
5.Unity百家公司面试题总结  C#部分   



官网：www.bjdedu.com
